plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'eclipse'
}

group = 'de.hanselmann'
version = '1.0.0'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

springBoot {    
    buildInfo() 
}

// bootBuildInfo generates the META-INF/build-info.properties from which the BuildInfo bean
// is created. However; bootBuildInfo generates it in build/resources/main/ which is not on
// the classpath when the application is executed in eclipse.
// Therefore we have to convince eclipse to generate and copy that file whenever the version info
// changes:

// This task copies the output of bootBuildInfo (the build-info.properties file) into
// the build directory of eclipse which is always on the classpath when the application is started
// with eclipse.
task copyBuildPropertiesForEclipse(type: Copy) {
    from bootBuildInfo
    into 'bin/main/META-INF/'
}

// Tell eclipse to execute the copy task whenever something in the workspace changes.
// Since copyBuildPropertiesForEclipse depends on bootBuildInfo,
// bootBuildInfo will be executed before copyBuildPropertiesForEclipse (thats why we wrote
// "from bootBuildInfo" instead of "from 'build/resources/main/META-INF/build-info.properties')
eclipse {
    autoBuildTasks copyBuildPropertiesForEclipse
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'io.leangen.graphql:graphql-spqr-spring-boot-starter:0.0.4'
    implementation 'io.leangen.graphql:spqr:0.10.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.projectreactor:reactor-core:3.3.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:2.3.0.RELEASE'
    implementation 'com.aventrix.jnanoid:jnanoid:2.0.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

bootJar.classpath('public')


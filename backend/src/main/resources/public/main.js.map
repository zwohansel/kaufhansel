{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./GraphQLDefinitions.ts","webpack:///./LoginComponent.tsx","webpack:///./ShoppingListComponent.tsx","webpack:///./ShoppingListItemComponent.tsx","webpack:///./utils.ts","webpack:///./EditableShoppingListComponent.tsx","webpack:///./ShoppingListBoard.tsx","webpack:///./index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","GET_ITEMS","CREATE_ITEM","DELETE_ITEM","UPDATEM_ITEM","CLEAR_LIST","LOGIN","SHOPPING_LIST_CHANGED","LoginComponent","props","username","setUserName","password","setPassword","loginError","setLoginError","doLogin","loading","credentialsEmpty","login","variables","justify","align","style","height","labelCol","span","wrapperCol","Item","label","required","validateStatus","hasFeedback","onChange","event","target","onPressEnter","disabled","help","Password","offset","type","onClick","ShoppingListFilter","ShoppingListItemComponent","assigneeCandidates","array","set","Set","element","has","add","unique","filter","e","deletingItem","setDeletingItem","newAssignee","setNewAssignee","showNewAssigneeSelection","setShowNewAssigneeSelection","handleAssigneeSelectionOk","onItemAssigneeChange","handleAssigneeSelectionCancel","className","item","_id","textDecoration","checked","onItemCheckedChange","marginRight","assignee","stopPropagation","size","onItemDeleted","DeleteFilled","alt","title","visible","okButtonProps","onOk","onCancel","footer","danger","dataSource","split","renderItem","placeholder","filteredList","shoppingList","all","unchecked","description","image","ShoppingOutlined","fontSize","newItemName","setNewItemName","creatingItem","setCreatingItem","map","createNewItem","onCreateNewItem","gutter","xs","sm","md","lg","xl","width","TabPane","handleApolloError","error","onAuthenticationError","graphQLErrors","find","extensions","code","notification","message","networkError","numberOfShoppingListItems","shoppingListData","shoppingListItems","newItemCreatedRef","mainTabContentRef","createItem","current","items","getElementsByClassName","scrollIntoView","behavior","updateItem","deleteItem","clearList","onSubscriptionData","options","subscriptionData","changeEvent","shoppingListChanged","existingItemIndex","cachedList","findIndex","updatedList","client","writeQuery","query","activeList","itemsGroupedByAssignee","keyMapper","valueMapper","Map","valueList","groupBy","assigneeShoppingLists","Array","from","entries","handleItemCheckedStateChange","id","state","optimisticResponse","updateShoppingListItem","__typename","handleItemAssigneeChange","handleItemDeleted","activeTabKey","setActiveTabKey","activeFilter","setActiveFilter","renderListHeader","Group","buttonStyle","Button","ShoppingCartOutlined","CheckSquareOutlined","BorderOutlined","renderMenuButton","setShowMenu","MenuOutlined","showMenu","src","subTitle","extra","spinning","loadingShoppingListItems","tip","wrapperClassName","defaultActiveKey","activeKey","animated","tab","ref","assigneeShoppingList","closable","onClose","selectable","forEach","UsergroupDeleteOutlined","confirm","okText","cancelText","icon","color","okType","DeleteOutlined","CloseOutlined","websocketUri","location","protocol","host","httpLink","uri","wsLink","reconnect","splitLink","definition","kind","operation","cache","link","delay","initial","max","jitter","attempts","Infinity","retryIf","operationName","render","StrictMode","loggedIn","setLoggedIn","history","path","onLoginSuccess","replace","to","pathname","document","getElementById"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([441,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import gql from \"graphql-tag\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\n\ninterface GraphQlResponse<T> {\n  success: boolean;\n  message: string;\n  data?: T;\n}\n\nexport const GET_ITEMS = gql`\n  query shoppingListItems {\n    shoppingListItems {\n      _id\n      name\n      checked\n      assignee\n    }\n  }\n`;\n\nexport interface ShoppingListItemsData {\n  shoppingListItems: ShoppingListItem[];\n}\n\nexport const CREATE_ITEM = gql`\n  mutation createShoppingListItem($name: String!) {\n    createShoppingListItem(name: $name) {\n      _id\n      name\n      checked\n      assignee\n    }\n  }\n`;\n\nexport interface CreateShoppingListItemData {\n  createShoppingListItem: ShoppingListItem;\n}\n\nexport const DELETE_ITEM = gql`\n  mutation deleteItem($id: ID!) {\n    deleteShoppingListItem(id: $id)\n  }\n`;\n\nexport interface DeleteShoppingListItemData {\n  deleteShoppingListItem: string;\n}\n\nexport const UPDATEM_ITEM = gql`\n  mutation updateItem($id: ID!, $state: Boolean, $assignee: String) {\n    updateShoppingListItem(id: $id, state: $state, assignee: $assignee) {\n      _id\n      name\n      checked\n      assignee\n    }\n  }\n`;\n\nexport interface UpdateItemData {\n  __typename?: string;\n  updateShoppingListItem: ShoppingListItem;\n}\n\nexport interface UpdateItemVariables {\n  id: string;\n  state?: boolean;\n  assignee?: string;\n}\n\nexport const CLEAR_LIST = gql`\n  mutation clearList {\n    clearShoppingList\n  }\n`;\n\nexport interface ClearShoppingListData {\n  clearShoppingList: boolean;\n}\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      success\n      message\n    }\n  }\n`;\n\nexport interface LoginData {\n  login: GraphQlResponse<void>;\n}\n\nexport interface LoginVariables {\n  username: string;\n  password: string;\n}\n\nexport const SHOPPING_LIST_CHANGED = gql`\n  subscription shoppingListChanged {\n    shoppingListChanged {\n      item {\n        _id\n        assignee\n        checked\n        name\n      }\n      type\n    }\n  }\n`;\n\nexport interface ShoppingListChangedEvent {\n  type: string;\n  item: ShoppingListItem;\n}\n\nexport interface ShoppingListChangedData {\n  shoppingListChanged: ShoppingListChangedEvent;\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Button, Row, Col } from \"antd\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LoginData, LoginVariables, LOGIN } from \"./GraphQLDefinitions\";\n\nexport interface LoginComponentProps {\n  onLoginSuccess: () => void;\n}\n\nexport default function LoginComponent(props: LoginComponentProps) {\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n\n  const [doLogin, { loading }] = useMutation<LoginData, LoginVariables>(LOGIN, {\n    onCompleted: data => {\n      if (data.login.success) {\n        setLoginError(\"\");\n        props.onLoginSuccess();\n      } else {\n        setLoginError(data.login.message);\n      }\n    },\n    fetchPolicy: \"no-cache\"\n  });\n\n  const credentialsEmpty = username === \"\" || password === \"\";\n\n  const login = () => {\n    if (credentialsEmpty) {\n      return;\n    }\n    doLogin({ variables: { username, password } });\n  };\n\n  return (\n    <Row justify={\"center\"} align={\"middle\"} style={{ height: \"100%\" }}>\n      <Col>\n        <Form labelCol={{ span: 8 }} wrapperCol={{ span: 16 }}>\n          <Form.Item label={\"Nutzername:\"} required={true} validateStatus={loginError ? \"error\" : \"\"} hasFeedback>\n            <Input\n              onChange={event => setUserName(event.target.value)}\n              value={username}\n              onPressEnter={login}\n              disabled={loading}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\"Kennwort:\"}\n            required={true}\n            help={loginError}\n            validateStatus={loginError ? \"error\" : \"\"}\n            hasFeedback\n          >\n            <Input.Password\n              onChange={event => setPassword(event.target.value)}\n              value={password}\n              onPressEnter={login}\n              disabled={loading}\n            />\n          </Form.Item>\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" onClick={login} disabled={credentialsEmpty || loading} loading={loading}>\n              Anmelden\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n","import { ShoppingOutlined } from \"@ant-design/icons\";\nimport { Empty, List } from \"antd\";\nimport React from \"react\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\nimport { ShoppingListItemComponent } from \"./ShoppingListItemComponent\";\n\nexport enum ShoppingListFilter {\n  all,\n  checked,\n  unchecked\n}\n\nexport interface ShoppingListComponentProps {\n  className?: string;\n  assigneeCandidates?: string[];\n  shoppingList: ShoppingListItem[];\n  filter: ShoppingListFilter;\n  onItemCheckedChange: (item: ShoppingListItem, checked: boolean) => void;\n  onItemDeleted: (item: ShoppingListItem) => Promise<void>;\n  onItemAssigneeChange?: (item: ShoppingListItem, assignee: string) => void;\n}\n\nfunction ShoppingListComponent(props: ShoppingListComponentProps) {\n  const filteredList = props.shoppingList.filter(item => {\n    switch (props.filter) {\n      case ShoppingListFilter.all:\n        return true;\n      case ShoppingListFilter.checked:\n        return item.checked;\n      case ShoppingListFilter.unchecked:\n        return !item.checked;\n    }\n  });\n\n  if (filteredList.length === 0) {\n    return (\n      <Empty\n        description=\"Kaufstu was!?\"\n        image={<ShoppingOutlined style={{ fontSize: \"6em\" }} />}\n        className={props.className}\n      />\n    );\n  }\n\n  return (\n    <List\n      className={props.className}\n      dataSource={filteredList}\n      size=\"small\"\n      renderItem={item => {\n        return (\n          <ShoppingListItemComponent\n            item={item}\n            assigneeCandidates={props.assigneeCandidates}\n            onItemCheckedChange={checked => props.onItemCheckedChange(item, checked)}\n            onItemDeleted={() => props.onItemDeleted(item)}\n            onItemAssigneeChange={assignee => {\n              if (props.onItemAssigneeChange) {\n                props.onItemAssigneeChange(item, assignee);\n              }\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nexport default ShoppingListComponent;\n","import { DeleteFilled } from \"@ant-design/icons\";\nimport { Button, Checkbox, Col, Input, List, Modal, Row } from \"antd\";\nimport React, { Fragment, useState } from \"react\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\nimport { unique } from \"./utils\";\n\nexport interface ShoppingListItemComponentProps {\n  item: ShoppingListItem;\n  assigneeCandidates?: string[];\n  onItemCheckedChange: (checked: boolean) => void;\n  onItemDeleted: () => Promise<void>;\n  onItemAssigneeChange?: (assignee: string) => void;\n}\n\nexport function ShoppingListItemComponent(props: ShoppingListItemComponentProps) {\n  const assigneeCandidates = props.assigneeCandidates ? unique(props.assigneeCandidates.filter(e => e !== \"\")) : [];\n\n  const [deletingItem, setDeletingItem] = useState(false);\n  const [newAssignee, setNewAssignee] = useState(\"\");\n  const [showNewAssigneeSelection, setShowNewAssigneeSelection] = useState(false);\n\n  const handleAssigneeSelectionOk = () => {\n    setShowNewAssigneeSelection(false);\n\n    if (props.onItemAssigneeChange) {\n      props.onItemAssigneeChange(newAssignee);\n    }\n  };\n\n  const handleAssigneeSelectionCancel = () => {\n    setShowNewAssigneeSelection(false);\n  };\n\n  return (\n    <Fragment>\n      <List.Item\n        className=\"shopping-list-item\"\n        key={props.item._id}\n        style={{\n          textDecoration: props.item.checked ? \"line-through\" : \"none\"\n        }}\n        onClick={() => props.onItemCheckedChange(!props.item.checked)}\n      >\n        <Row className=\"shopping-list-item-row\">\n          <Col span={20}>\n            <Checkbox style={{ marginRight: \"1em\" }} checked={props.item.checked} />\n            {props.item.name}\n            {props.assigneeCandidates && props.item.assignee ? \" kauft\" : \"\"}\n            {props.assigneeCandidates && (\n              <span\n                className={\n                  \"assignee-candidate\" +\n                  (props.item.assignee === \"\" ? \" assignee-candidate-placeholder\" : \" assignee-candidate-set\")\n                }\n                onClick={e => {\n                  e.stopPropagation();\n                  setNewAssignee(\"\");\n                  setShowNewAssigneeSelection(true);\n                }}\n              >\n                {props.item.assignee === \"\" ? \"Wer kauft das?\" : props.item.assignee}\n              </span>\n            )}\n          </Col>\n          <Col span={4}>\n            <Button\n              key=\"delete-item-btn\"\n              type=\"dashed\"\n              size=\"small\"\n              loading={deletingItem}\n              onClick={async e => {\n                e.stopPropagation();\n                setDeletingItem(true);\n                await props.onItemDeleted();\n                setDeletingItem(false);\n              }}\n              data-testid=\"delete-item-btn\"\n              className=\"delete-item-btn\"\n            >\n              {deletingItem ? <div /> : <DeleteFilled alt={\"Eintrag entfernen\"} />}\n            </Button>\n          </Col>\n        </Row>\n      </List.Item>\n      <Modal\n        title={\n          <div>\n            <span>Wer kauft das?</span>\n            <span className=\"assignee-select-dialog-subtitle\">Wählstu oder sagstu!</span>\n          </div>\n        }\n        visible={showNewAssigneeSelection}\n        okButtonProps={{ disabled: newAssignee === \"\" }}\n        onOk={handleAssigneeSelectionOk}\n        onCancel={handleAssigneeSelectionCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleAssigneeSelectionCancel}>\n            Egal\n          </Button>,\n          <Button\n            key=\"delete\"\n            danger\n            disabled={props.item.assignee === \"\"}\n            onClick={() => {\n              setShowNewAssigneeSelection(false);\n\n              if (props.onItemAssigneeChange) {\n                props.onItemAssigneeChange(\"\");\n              }\n            }}\n          >\n            Niemand\n          </Button>,\n          <Button key=\"ok\" type=\"primary\" onClick={handleAssigneeSelectionOk}>\n            Zuweisen\n          </Button>\n        ]}\n      >\n        {assigneeCandidates.length !== 0 ? (\n          <List\n            dataSource={assigneeCandidates}\n            split={false}\n            renderItem={assignee => (\n              <List.Item\n                className={\"assignee-candidate-item\" + (props.item.assignee === assignee ? \" current-candidate\" : \"\")}\n                key={assignee}\n                onClick={() => {\n                  setShowNewAssigneeSelection(false);\n\n                  if (props.onItemAssigneeChange) {\n                    props.onItemAssigneeChange(assignee);\n                  }\n                }}\n              >\n                {assignee}\n              </List.Item>\n            )}\n          />\n        ) : (\n          <div />\n        )}\n        <Input\n          placeholder={\"Sagstu!\"}\n          value={newAssignee}\n          onChange={e => setNewAssignee(e.target.value)}\n          onPressEnter={handleAssigneeSelectionOk}\n        />\n      </Modal>\n    </Fragment>\n  );\n}\n","export function unique<T>(array: T[]): T[] {\n  const set = new Set<T>();\n  const result: T[] = [];\n\n  for (const element of array) {\n    if (!set.has(element)) {\n      result.push(element);\n      set.add(element);\n    }\n  }\n\n  return result;\n}\n\nexport function groupBy<K, V, T>(array: T[], keyMapper: (item: T) => K, valueMapper: (item: T) => V): Map<K, V[]> {\n  const map = new Map<K, V[]>();\n\n  for (const item of array) {\n    const key = keyMapper(item);\n    const value = valueMapper(item);\n\n    const valueList = map.get(key);\n\n    if (valueList) {\n      valueList.push(value);\n    } else {\n      map.set(key, [value]);\n    }\n  }\n\n  return map;\n}\n","import { Button, Col, Input, Row } from \"antd\";\nimport React, { useState } from \"react\";\nimport ShoppingListComponent, { ShoppingListFilter } from \"./ShoppingListComponent\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\n\nexport interface EditableShoppingListComponentProps {\n  shoppingList: ShoppingListItem[];\n  filter: ShoppingListFilter;\n  onItemCheckedChange: (item: ShoppingListItem, checked: boolean) => void;\n  onItemDeleted: (item: ShoppingListItem) => Promise<void>;\n  onItemAssigneeChange: (item: ShoppingListItem, assignee: string) => void;\n  onCreateNewItem: (name: string) => Promise<void>;\n}\n\nfunction EditableShoppingListComponent(props: EditableShoppingListComponentProps) {\n  const [newItemName, setNewItemName] = useState<string>(\"\");\n  const [creatingItem, setCreatingItem] = useState<boolean>(false);\n\n  const assigneeCandidates: string[] = props.shoppingList.map(item => item.assignee);\n\n  const createNewItem = async () => {\n    if (newItemName === \"\") {\n      return;\n    }\n\n    setCreatingItem(true);\n    await props.onCreateNewItem(newItemName);\n    setNewItemName(\"\");\n    setCreatingItem(false);\n  };\n\n  return (\n    <div className=\"editable-shopping-list-component\">\n      <ShoppingListComponent\n        className=\"editable-shopping-list-component-list\"\n        shoppingList={props.shoppingList}\n        filter={props.filter}\n        assigneeCandidates={assigneeCandidates}\n        onItemAssigneeChange={props.onItemAssigneeChange}\n        onItemCheckedChange={props.onItemCheckedChange}\n        onItemDeleted={props.onItemDeleted}\n      />\n      <div className=\"editable-shopping-list-component-controls\">\n        <Row gutter={[16, 8]}>\n          <Col xs={20} sm={20} md={20} lg={20} xl={20}>\n            <Input\n              value={newItemName}\n              onChange={event => setNewItemName(event.target.value)}\n              onPressEnter={createNewItem}\n              disabled={creatingItem}\n            />\n          </Col>\n          <Col xs={0} sm={0} md={4} lg={4} xl={4}>\n            <Button\n              type=\"primary\"\n              style={{ width: \"100%\" }}\n              disabled={newItemName === \"\"}\n              onClick={createNewItem}\n              loading={creatingItem}\n            >\n              Hinzufügen\n            </Button>\n          </Col>\n\n          <Col xs={4} sm={4} md={0} lg={0} xl={0}>\n            <Button\n              className=\"editable-shopping-list-small-add-button\"\n              type=\"primary\"\n              disabled={newItemName === \"\"}\n              onClick={createNewItem}\n              loading={creatingItem}\n            >\n              {creatingItem ? \"\" : \"+\"}\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default EditableShoppingListComponent;\n","import {\n  BorderOutlined,\n  CheckSquareOutlined,\n  CloseOutlined,\n  DeleteFilled,\n  DeleteOutlined,\n  MenuOutlined,\n  ShoppingCartOutlined,\n  UsergroupDeleteOutlined\n} from \"@ant-design/icons\";\nimport { useMutation, useQuery, useSubscription } from \"@apollo/react-hooks\";\nimport { Button, Col, Drawer, Menu, Modal, notification, PageHeader, Radio, Row, Spin, Tabs } from \"antd\";\nimport { ApolloError } from \"apollo-client\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport EditableShoppingListComponent from \"./EditableShoppingListComponent\";\nimport {\n  ClearShoppingListData,\n  CLEAR_LIST,\n  CreateShoppingListItemData,\n  CREATE_ITEM,\n  DeleteShoppingListItemData,\n  DELETE_ITEM,\n  GET_ITEMS,\n  ShoppingListChangedData,\n  ShoppingListItemsData,\n  SHOPPING_LIST_CHANGED,\n  UpdateItemData,\n  UpdateItemVariables,\n  UPDATEM_ITEM\n} from \"./GraphQLDefinitions\";\nimport ShoppingListComponent, { ShoppingListFilter } from \"./ShoppingListComponent\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\nimport { groupBy } from \"./utils\";\n\nconst { TabPane } = Tabs;\n\nexport interface ShoppingListBoardProps {\n  onAuthenticationError?: () => void;\n}\n\nfunction ShoppingListBoard(props: ShoppingListBoardProps) {\n  const handleApolloError = (error: ApolloError) => {\n    if (props.onAuthenticationError && error.graphQLErrors.find(e => e?.extensions?.code === 401)) {\n      props.onAuthenticationError();\n    } else {\n      notification.error({\n        message: error.networkError ? \"Uuups ein Fehler ist aufgetreten...\" : error.name,\n        description: error.networkError ? \"Der Server antwortet nicht :(\" : error.message\n      });\n    }\n  };\n\n  const { loading: loadingShoppingListItems, data: shoppingListData } = useQuery<ShoppingListItemsData>(GET_ITEMS, {\n    onError: handleApolloError\n  });\n\n  const numberOfShoppingListItems = shoppingListData ? shoppingListData.shoppingListItems.length : 0;\n\n  const newItemCreatedRef = useRef(false);\n  const mainTabContentRef = useRef<HTMLDivElement>(null);\n\n  const [createItem] = useMutation<CreateShoppingListItemData, { name: string }>(CREATE_ITEM, {\n    onError: handleApolloError,\n    update: (cache, { data }) => {\n      const createdItem = data!.createShoppingListItem;\n      const { shoppingListItems: cachedList } = cache.readQuery<ShoppingListItemsData>({ query: GET_ITEMS })!;\n\n      if (cachedList.find(item => item._id === createdItem._id)) {\n        return; // Item already added via subscription\n      }\n\n      cache.writeQuery<ShoppingListItemsData>({\n        query: GET_ITEMS,\n        data: {\n          shoppingListItems: [...cachedList, createdItem]\n        }\n      });\n\n      newItemCreatedRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (!newItemCreatedRef.current) {\n      return;\n    }\n\n    if (mainTabContentRef.current === null) {\n      return;\n    }\n\n    const items = mainTabContentRef.current.getElementsByClassName(\"shopping-list-item\");\n\n    if (items.length > 0) {\n      items[items.length - 1].scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    newItemCreatedRef.current = false;\n  }, [numberOfShoppingListItems]);\n\n  const [updateItem] = useMutation<UpdateItemData, UpdateItemVariables>(UPDATEM_ITEM, {\n    onError: handleApolloError\n  });\n\n  const [deleteItem] = useMutation<DeleteShoppingListItemData, { id: string }>(DELETE_ITEM, {\n    onError: handleApolloError,\n    update: (cache, { data }) => {\n      const deletedItemId = data!.deleteShoppingListItem;\n      const { shoppingListItems: cachedList } = cache.readQuery<ShoppingListItemsData>({ query: GET_ITEMS })!;\n      cache.writeQuery<ShoppingListItemsData>({\n        query: GET_ITEMS,\n        data: {\n          shoppingListItems: cachedList.filter(item => item._id !== deletedItemId)\n        }\n      });\n    }\n  });\n\n  const [clearList] = useMutation<ClearShoppingListData, {}>(CLEAR_LIST, {\n    onError: handleApolloError,\n    update: cache => {\n      cache.writeQuery<ShoppingListItemsData>({\n        query: GET_ITEMS,\n        data: {\n          shoppingListItems: []\n        }\n      });\n    }\n  });\n\n  useSubscription<ShoppingListChangedData, void>(SHOPPING_LIST_CHANGED, {\n    onSubscriptionData: options => {\n      if (!options.subscriptionData.data) {\n        return;\n      }\n\n      const changeEvent = options.subscriptionData.data.shoppingListChanged;\n      const { shoppingListItems: cachedList } = options.client.readQuery<ShoppingListItemsData>({\n        query: GET_ITEMS\n      })!;\n\n      const existingItemIndex = cachedList.findIndex(item => item._id === changeEvent.item._id);\n\n      const updatedList = [...cachedList];\n\n      switch (changeEvent.type) {\n        case \"ITEM_CHANGED\":\n          updatedList[existingItemIndex] = changeEvent.item;\n          break;\n\n        case \"ITEM_CREATED\":\n          if (existingItemIndex < 0) {\n            updatedList.push(changeEvent.item);\n          }\n          break;\n\n        case \"ITEM_DELETED\":\n          if (existingItemIndex >= 0) {\n            updatedList.splice(existingItemIndex, 1);\n          }\n          break;\n      }\n\n      options.client.writeQuery<ShoppingListItemsData>({\n        query: GET_ITEMS,\n        data: {\n          shoppingListItems: updatedList\n        }\n      });\n    }\n  });\n\n  const createNewItem = async (name: string) => {\n    await createItem({ variables: { name } });\n  };\n\n  const shoppingList = shoppingListData?.shoppingListItems || [];\n\n  const itemsGroupedByAssignee = groupBy(\n    shoppingList.filter(item => !!item.assignee),\n    item => item.assignee,\n    item => item\n  );\n\n  const assigneeShoppingLists = Array.from(itemsGroupedByAssignee.entries());\n\n  const handleItemCheckedStateChange = (item: ShoppingListItem, checked: boolean) => {\n    updateItem({\n      variables: {\n        id: item._id,\n        state: checked\n      },\n      optimisticResponse: {\n        updateShoppingListItem: {\n          __typename: \"ShoppingListItem\",\n          _id: item._id,\n          assignee: item.assignee,\n          name: item.name,\n          checked: checked\n        }\n      }\n    });\n  };\n\n  const handleItemAssigneeChange = (item: ShoppingListItem, assignee: string) => {\n    updateItem({\n      variables: {\n        id: item._id,\n        assignee: assignee\n      }\n    });\n  };\n\n  const handleItemDeleted = async (item: ShoppingListItem) => {\n    await deleteItem({\n      variables: {\n        id: item._id\n      }\n    });\n  };\n\n  const [activeTabKey, setActiveTabKey] = useState(\"main\");\n\n  const getActiveShoppingList = () => {\n    const assigneeList = itemsGroupedByAssignee.get(activeTabKey);\n\n    if (assigneeList) {\n      return assigneeList;\n    }\n\n    return shoppingList;\n  };\n\n  const createSubTitle = () => {\n    const activeList = getActiveShoppingList();\n\n    const itemsToBuy = activeList.filter(item => !item.checked).length;\n\n    return `${itemsToBuy}/${activeList.length}`;\n  };\n\n  const [activeFilter, setActiveFilter] = useState(ShoppingListFilter.all);\n\n  const renderToolbar = () => {\n    return (\n      <Row gutter={4}>\n        <Col>{renderListHeader()}</Col>\n        <Col>{renderMenuButton()}</Col>\n      </Row>\n    );\n  };\n\n  const renderListHeader = () => {\n    return (\n      <Radio.Group\n        buttonStyle=\"solid\"\n        size=\"small\"\n        value={activeFilter}\n        onChange={event => setActiveFilter(event.target.value)}\n      >\n        <Radio.Button value={ShoppingListFilter.all}>\n          <ShoppingCartOutlined></ShoppingCartOutlined>\n        </Radio.Button>\n        <Radio.Button value={ShoppingListFilter.checked}>\n          <CheckSquareOutlined />\n        </Radio.Button>\n        <Radio.Button value={ShoppingListFilter.unchecked}>\n          <BorderOutlined />\n        </Radio.Button>\n      </Radio.Group>\n    );\n  };\n\n  const renderMenuButton = () => {\n    return (\n      <Button size=\"small\" onClick={() => setShowMenu(true)}>\n        <MenuOutlined />\n      </Button>\n    );\n  };\n\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <Fragment>\n      <div className=\"shopping-list-board\">\n        <PageHeader\n          title={\n            <span>\n              <img className=\"kaufhansel-image\" src=\"favicon.svg\" />\n              <span>Kaufhansel</span>\n            </span>\n          }\n          subTitle={createSubTitle()}\n          className=\"shopping-list-board-header\"\n          extra={renderToolbar()}\n        />\n        <Spin\n          spinning={loadingShoppingListItems}\n          tip=\"Wird aktualisiert...\"\n          wrapperClassName=\"shopping-list-board-spinner\"\n        >\n          <Tabs\n            defaultActiveKey=\"main\"\n            activeKey={activeTabKey}\n            onChange={setActiveTabKey}\n            className=\"shopping-list-board-tabs\"\n            animated={false}\n          >\n            <TabPane tab=\"Alle\" key=\"main\">\n              <div ref={mainTabContentRef} className=\"shopping-list-board-main-tab-content\">\n                <EditableShoppingListComponent\n                  shoppingList={shoppingList}\n                  filter={activeFilter}\n                  onItemAssigneeChange={handleItemAssigneeChange}\n                  onItemCheckedChange={handleItemCheckedStateChange}\n                  onItemDeleted={handleItemDeleted}\n                  onCreateNewItem={createNewItem}\n                />\n              </div>\n            </TabPane>\n\n            {assigneeShoppingLists.map(([assignee, assigneeShoppingList]) => {\n              return (\n                <TabPane tab={assignee} key={assignee}>\n                  <ShoppingListComponent\n                    className=\"shopping-list-board-readonly-list\"\n                    shoppingList={assigneeShoppingList}\n                    filter={activeFilter}\n                    onItemCheckedChange={handleItemCheckedStateChange}\n                    onItemDeleted={handleItemDeleted}\n                  />\n                </TabPane>\n              );\n            })}\n          </Tabs>\n        </Spin>\n      </div>\n      <Drawer visible={showMenu} closable={false} onClose={() => setShowMenu(false)}>\n        <Menu mode=\"inline\" selectable={false}>\n          <Menu.Item\n            onClick={() => {\n              shoppingList.forEach(item => handleItemCheckedStateChange(item, false));\n              setShowMenu(false);\n            }}\n          >\n            <BorderOutlined />\n            Alles nochmal kaufen\n          </Menu.Item>\n          <Menu.Item\n            onClick={() => {\n              shoppingList.forEach(item => handleItemAssigneeChange(item, \"\"));\n              setShowMenu(false);\n            }}\n          >\n            <UsergroupDeleteOutlined />\n            Niemand kauft\n          </Menu.Item>\n          <Menu.Item\n            onClick={() => {\n              Modal.confirm({\n                title: \"Wollen Sie die Einkaufsliste wirklich leeren?\",\n                onOk: () => clearList(),\n                okText: \"Ja\",\n                cancelText: \"Nein\",\n                icon: <DeleteFilled style={{ color: \"#555555\" }} />,\n                okType: \"danger\"\n              });\n              setShowMenu(false);\n            }}\n          >\n            <DeleteOutlined />\n            Alles löschen...\n          </Menu.Item>\n          <Menu.Item onClick={() => setShowMenu(false)}>\n            <CloseOutlined />\n            Menü Schließen\n          </Menu.Item>\n        </Menu>\n      </Drawer>\n    </Fragment>\n  );\n}\n\nexport default ShoppingListBoard;\n","import { ApolloProvider } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport ApolloClient from \"apollo-client\";\nimport { ApolloLink, split } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { RetryLink } from \"apollo-link-retry\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport \"./index.css\";\nimport LoginComponent from \"./LoginComponent\";\nimport ShoppingListBoard from \"./ShoppingListBoard\";\n\nconst websocketProtocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\nconst websocketUri = `${websocketProtocol}://${window.location.host}/graphql`;\n\nconst httpLink = new HttpLink({ uri: \"/graphql\" });\n\nconst wsLink = new WebSocketLink({\n  uri: websocketUri,\n  options: {\n    reconnect: true\n  }\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([\n    new RetryLink({\n      delay: {\n        initial: 300,\n        max: 5000,\n        jitter: true\n      },\n      attempts: {\n        max: Infinity,\n        retryIf: (error, operation) => {\n          return operation.operationName !== \"shoppingListItems\" && !!error;\n        }\n      }\n    }),\n    splitLink\n  ])\n});\n\nfunction ShoppingListApp() {\n  const [loggedIn, setLoggedIn] = useState(document.cookie.includes(\"SHOPPER_LOGGED_IN=true\"));\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route path=\"/login\">\n        <LoginComponent\n          onLoginSuccess={() => {\n            setLoggedIn(true);\n            history.replace(\"/\");\n          }}\n        />\n      </Route>\n      <Route\n        path=\"/\"\n        render={({ location }) => {\n          if (loggedIn) {\n            return <ShoppingListBoard onAuthenticationError={() => setLoggedIn(false)} />;\n          } else {\n            return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n          }\n        }}\n      ></Route>\n    </Switch>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <ShoppingListApp />\n      </BrowserRouter>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./GraphQLDefinitions.ts","webpack:///./LoginComponent.tsx","webpack:///./ShoppingListItemComponent.tsx","webpack:///./utils.ts","webpack:///./ShoppingListComponent.tsx","webpack:///./EditableShoppingListComponent.tsx","webpack:///./ShoppingListBoard.tsx","webpack:///./index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","GET_ITEMS","CREATE_ITEM","DELETE_ITEM","UPDATEM_ITEM","CLEAR_LIST","LOGIN","LoginComponent","props","username","setUserName","password","setPassword","loginError","setLoginError","doLogin","loading","credentialsEmpty","login","variables","justify","align","style","height","labelCol","span","wrapperCol","Item","label","required","validateStatus","hasFeedback","onChange","event","target","onPressEnter","disabled","help","Password","offset","type","onClick","ShoppingListItemComponent","newAssigneeName","setNewAssigneeName","assigneeCandidates","array","set","Set","element","has","add","unique","filter","e","startsWith","selectNewAssignee","onItemAssigneeChange","item","assignee","_id","textDecoration","checked","width","marginRight","onItemCheckedChange","defaultActiveFirstOption","onSelect","onInputKeyDown","keyCode","onBlur","placeholder","options","map","bordered","size","minWidth","border","padding","onItemDeleted","className","DeleteFilled","alt","dataSource","shoppingList","renderItem","newItemName","setNewItemName","creatingItem","setCreatingItem","createNewItem","onCreateNewItem","offsetBottom","paddingTop","paddingBottom","background","borderTop","gutter","xs","sm","md","lg","xl","title","onConfirm","onDeleteAllItems","okText","cancelText","icon","color","okType","danger","TabPane","activeList","itemsToBuy","isMainTab","handleApolloError","error","onAuthenticationError","graphQLErrors","find","extensions","code","notification","message","networkError","description","createItem","updateItem","deleteItem","clearList","shoppingListData","shoppingListItems","itemsGroupedByAssignee","keyMapper","valueMapper","Map","valueList","groupBy","assigneeShoppingLists","Array","from","entries","handleItemCheckedStateChange","id","state","optimisticResponse","updateShoppingListItem","__typename","handleItemDeleted","activeTabKey","setActiveTabKey","subTitle","spinning","loadingShoppingListItems","tip","defaultActiveKey","activeKey","tab","assigneeShoppingList","client","cache","link","delay","initial","max","jitter","attempts","Infinity","retryIf","console","log","uri","render","StrictMode","loggedIn","setLoggedIn","history","path","onLoginSuccess","replace","location","to","pathname","document","getElementById"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([425,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import gql from \"graphql-tag\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\n\ninterface GraphQlResponse<T> {\n  success: boolean;\n  message: string;\n  data?: T;\n}\n\nexport const GET_ITEMS = gql`\n  {\n    shoppingListItems {\n      _id\n      name\n      checked\n      assignee\n    }\n  }\n`;\n\nexport interface ShoppingListItemsData {\n  shoppingListItems: ShoppingListItem[];\n}\n\nexport const CREATE_ITEM = gql`\n  mutation createShoppingListItem($name: String!) {\n    createShoppingListItem(name: $name) {\n      _id\n      name\n      checked\n      assignee\n    }\n  }\n`;\n\nexport interface CreateShoppingListItemData {\n  createShoppingListItem: ShoppingListItem;\n}\n\nexport const DELETE_ITEM = gql`\n  mutation deleteItem($id: ID!) {\n    deleteShoppingListItem(id: $id)\n  }\n`;\n\nexport interface DeleteShoppingListItemData {\n  deleteShoppingListItem: string;\n}\n\nexport const UPDATEM_ITEM = gql`\n  mutation updateItem($id: ID!, $state: Boolean, $assignee: String) {\n    updateShoppingListItem(id: $id, state: $state, assignee: $assignee) {\n      _id\n      name\n      checked\n      assignee\n    }\n  }\n`;\n\nexport interface UpdateItemData {\n  __typename?: string;\n  updateShoppingListItem: ShoppingListItem;\n}\n\nexport interface UpdateItemVariables {\n  id: string;\n  state?: boolean;\n  assignee?: string;\n}\n\nexport const CLEAR_LIST = gql`\n  mutation clearList {\n    clearShoppingList\n  }\n`;\n\nexport interface ClearShoppingListData {\n  clearShoppingList: boolean;\n}\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      success\n      message\n    }\n  }\n`;\n\nexport interface LoginData {\n  login: GraphQlResponse<void>;\n}\n\nexport interface LoginVariables {\n  username: string;\n  password: string;\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Button, Row, Col } from \"antd\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LoginData, LoginVariables, LOGIN } from \"./GraphQLDefinitions\";\n\nexport interface LoginComponentProps {\n  onLoginSuccess: () => void;\n}\n\nexport default function LoginComponent(props: LoginComponentProps) {\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n\n  const [doLogin, { loading }] = useMutation<LoginData, LoginVariables>(LOGIN, {\n    onCompleted: data => {\n      if (data.login.success) {\n        setLoginError(\"\");\n        props.onLoginSuccess();\n      } else {\n        setLoginError(data.login.message);\n      }\n    },\n    fetchPolicy: \"no-cache\"\n  });\n\n  const credentialsEmpty = username === \"\" || password === \"\";\n\n  const login = () => {\n    if (credentialsEmpty) {\n      return;\n    }\n    doLogin({ variables: { username, password } });\n  };\n\n  return (\n    <Row justify={\"center\"} align={\"middle\"} style={{ height: \"100%\" }}>\n      <Col>\n        <Form labelCol={{ span: 8 }} wrapperCol={{ span: 16 }}>\n          <Form.Item label={\"Nutzername:\"} required={true} validateStatus={loginError ? \"error\" : \"\"} hasFeedback>\n            <Input\n              onChange={event => setUserName(event.target.value)}\n              value={username}\n              onPressEnter={login}\n              disabled={loading}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\"Kennwort:\"}\n            required={true}\n            help={loginError}\n            validateStatus={loginError ? \"error\" : \"\"}\n            hasFeedback\n          >\n            <Input.Password\n              onChange={event => setPassword(event.target.value)}\n              value={password}\n              onPressEnter={login}\n              disabled={loading}\n            />\n          </Form.Item>\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" onClick={login} disabled={credentialsEmpty || loading} loading={loading}>\n              Anmelden\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n","import { DeleteFilled } from \"@ant-design/icons\";\nimport { AutoComplete, Button, Checkbox, Col, List, Row } from \"antd\";\nimport React, { useState } from \"react\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\nimport { unique } from \"./utils\";\n\nexport interface ShoppingListItemComponentProps {\n  item: ShoppingListItem;\n  assigneeCandidates?: string[];\n  onItemCheckedChange: (checked: boolean) => void;\n  onItemDeleted: () => void;\n  onItemAssigneeChange?: (assignee: string) => void;\n}\n\nexport function ShoppingListItemComponent(props: ShoppingListItemComponentProps) {\n  const [newAssigneeName, setNewAssigneeName] = useState(props.item.assignee);\n\n  const assigneeCandidates = props.assigneeCandidates\n    ? unique(props.assigneeCandidates.filter(e => e.startsWith(newAssigneeName) && e !== \"\"))\n    : [];\n\n  const selectNewAssignee = () => {\n    if (props.onItemAssigneeChange && newAssigneeName !== props.item.assignee) {\n      props.onItemAssigneeChange(newAssigneeName);\n    }\n  };\n\n  return (\n    <List.Item\n      key={props.item._id}\n      style={{\n        textDecoration: props.item.checked ? \"line-through\" : \"none\"\n      }}\n    >\n      <Row style={{ width: \"100%\" }}>\n        <Col span={22}>\n          <Checkbox\n            style={{ marginRight: \"1em\" }}\n            checked={props.item.checked}\n            onChange={event => props.onItemCheckedChange(event.target.checked)}\n          />\n          {props.item.name}\n\n          {props.assigneeCandidates && props.item.assignee ? \" kauft\" : \"\"}\n          {props.assigneeCandidates && (\n            <AutoComplete\n              defaultActiveFirstOption={true}\n              value={newAssigneeName}\n              onChange={setNewAssigneeName}\n              onSelect={selectNewAssignee}\n              onInputKeyDown={event => {\n                if (event.keyCode === 13) {\n                  selectNewAssignee();\n                }\n              }}\n              onBlur={selectNewAssignee}\n              placeholder={\"Wer kauf das?\"}\n              options={assigneeCandidates.map(value => {\n                return { value };\n              })}\n              bordered={false}\n              size={\"small\"}\n              style={{ minWidth: \"30%\" }}\n            ></AutoComplete>\n          )}\n        </Col>\n        <Col span={2}>\n          <Button\n            type=\"ghost\"\n            style={{ border: \"0px\", padding: 0 }}\n            onClick={props.onItemDeleted}\n            data-testid=\"delete-item-btn\"\n            className=\"delete-item-btn\"\n          >\n            <DeleteFilled alt={\"Eintrag entfernen\"} />\n          </Button>\n        </Col>\n      </Row>\n    </List.Item>\n  );\n}\n","export function unique<T>(array: T[]): T[] {\n  const set = new Set<T>();\n  const result: T[] = [];\n\n  for (const element of array) {\n    if (!set.has(element)) {\n      result.push(element);\n      set.add(element);\n    }\n  }\n\n  return result;\n}\n\nexport function groupBy<K, V, T>(array: T[], keyMapper: (item: T) => K, valueMapper: (item: T) => V): Map<K, V[]> {\n  const map = new Map<K, V[]>();\n\n  for (const item of array) {\n    const key = keyMapper(item);\n    const value = valueMapper(item);\n\n    const valueList = map.get(key);\n\n    if (valueList) {\n      valueList.push(value);\n    } else {\n      map.set(key, [value]);\n    }\n  }\n\n  return map;\n}\n","import { List } from \"antd\";\nimport React from \"react\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\nimport { ShoppingListItemComponent } from \"./ShoppingListItemComponent\";\n\nexport interface ShoppingListComponentProps {\n  assigneeCandidates?: string[];\n  shoppingList: ShoppingListItem[];\n  onItemCheckedChange: (item: ShoppingListItem, checked: boolean) => void;\n  onItemDeleted: (item: ShoppingListItem) => void;\n  onItemAssigneeChange?: (item: ShoppingListItem, assignee: string) => void;\n}\n\nfunction ShoppingListComponent(props: ShoppingListComponentProps) {\n  return (\n    <List\n      dataSource={props.shoppingList}\n      renderItem={item => {\n        return (\n          <ShoppingListItemComponent\n            item={item}\n            assigneeCandidates={props.assigneeCandidates}\n            onItemCheckedChange={checked => props.onItemCheckedChange(item, checked)}\n            onItemDeleted={() => props.onItemDeleted(item)}\n            onItemAssigneeChange={assignee => {\n              if (props.onItemAssigneeChange) {\n                props.onItemAssigneeChange(item, assignee);\n              }\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nexport default ShoppingListComponent;\n","import { DeleteFilled } from \"@ant-design/icons\";\nimport { Affix, Button, Col, Input, Popconfirm, Row } from \"antd\";\nimport React, { useState } from \"react\";\nimport ShoppingListComponent from \"./ShoppingListComponent\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\n\nexport interface EditableShoppingListComponentProps {\n  shoppingList: ShoppingListItem[];\n  onItemCheckedChange: (item: ShoppingListItem, checked: boolean) => void;\n  onItemDeleted: (item: ShoppingListItem) => void;\n  onItemAssigneeChange: (item: ShoppingListItem, assignee: string) => void;\n  onCreateNewItem: (name: string) => Promise<void>;\n  onDeleteAllItems: () => void;\n}\n\nfunction EditableShoppingListComponent(props: EditableShoppingListComponentProps) {\n  const [newItemName, setNewItemName] = useState<string>(\"\");\n  const [creatingItem, setCreatingItem] = useState<boolean>(false);\n\n  const assigneeCandidates: string[] = props.shoppingList.map(item => item.assignee);\n\n  const createNewItem = async () => {\n    if (newItemName === \"\") {\n      return;\n    }\n\n    setCreatingItem(true);\n    await props.onCreateNewItem(newItemName);\n    setNewItemName(\"\");\n    setCreatingItem(false);\n  };\n\n  return (\n    <div>\n      <ShoppingListComponent\n        shoppingList={props.shoppingList}\n        assigneeCandidates={assigneeCandidates}\n        onItemAssigneeChange={props.onItemAssigneeChange}\n        onItemCheckedChange={props.onItemCheckedChange}\n        onItemDeleted={props.onItemDeleted}\n      />\n      <Affix offsetBottom={0}>\n        <div style={{ paddingTop: \"10px\", paddingBottom: \"10px\", background: \"white\", borderTop: \"1px solid #f0f0f0\" }}>\n          <Row gutter={[16, 8]}>\n            <Col xs={24} sm={24} md={15} lg={15} xl={15}>\n              <Input\n                value={newItemName}\n                onChange={event => setNewItemName(event.target.value)}\n                onPressEnter={createNewItem}\n                disabled={creatingItem}\n              />\n            </Col>\n            <Col xs={24} sm={24} md={5} lg={5} xl={5}>\n              <Button\n                type=\"primary\"\n                style={{ width: \"100%\" }}\n                disabled={newItemName === \"\"}\n                onClick={createNewItem}\n                loading={creatingItem}\n              >\n                Hinzufügen\n              </Button>\n            </Col>\n            <Col xs={24} sm={24} md={4} lg={4} xl={4}>\n              <Popconfirm\n                title=\"Wollen Sie die Einkaufsliste wirklich leeren?\"\n                onConfirm={props.onDeleteAllItems}\n                okText=\"Ja\"\n                cancelText=\"Nein\"\n                icon={<DeleteFilled style={{ color: \"#555555\" }} />}\n                okType=\"danger\"\n              >\n                <Button style={{ width: \"100%\" }} danger type=\"primary\">\n                  Liste leeren\n                </Button>\n              </Popconfirm>\n            </Col>\n          </Row>\n        </div>\n      </Affix>\n    </div>\n  );\n}\n\nexport default EditableShoppingListComponent;\n","import { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { notification, PageHeader, Spin, Tabs } from \"antd\";\nimport React, { useState } from \"react\";\nimport EditableShoppingListComponent from \"./EditableShoppingListComponent\";\nimport {\n  ClearShoppingListData,\n  CLEAR_LIST,\n  CreateShoppingListItemData,\n  CREATE_ITEM,\n  DeleteShoppingListItemData,\n  DELETE_ITEM,\n  GET_ITEMS,\n  ShoppingListItemsData,\n  UpdateItemData,\n  UpdateItemVariables,\n  UPDATEM_ITEM\n} from \"./GraphQLDefinitions\";\nimport ShoppingListComponent from \"./ShoppingListComponent\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\nimport { groupBy } from \"./utils\";\nimport { ApolloError } from \"apollo-client\";\n\nconst { TabPane } = Tabs;\n\nexport interface ShoppingListBoardProps {\n  onAuthenticationError?: () => void;\n}\n\nfunction ShoppingListBoard(props: ShoppingListBoardProps) {\n  const handleApolloError = (error: ApolloError) => {\n    if (props.onAuthenticationError && error.graphQLErrors.find(e => e?.extensions?.code === 401)) {\n      props.onAuthenticationError();\n    } else {\n      notification.error({\n        message: error.networkError ? \"Uuups ein Fehler ist aufgetreten...\" : error.name,\n        description: error.networkError ? \"Der Server antwortet nicht :(\" : error.message\n      });\n    }\n  };\n\n  const { loading: loadingShoppingListItems, data: shoppingListData } = useQuery<ShoppingListItemsData>(GET_ITEMS, {\n    onError: handleApolloError\n    // fetchPolicy: \"network-only\"\n  });\n\n  const [createItem] = useMutation<CreateShoppingListItemData, { name: string }>(CREATE_ITEM, {\n    onError: handleApolloError,\n    update: (cache, { data }) => {\n      const createdItem = data!.createShoppingListItem;\n      const { shoppingListItems: cachedList } = cache.readQuery<ShoppingListItemsData>({ query: GET_ITEMS })!;\n      cache.writeQuery<ShoppingListItemsData>({\n        query: GET_ITEMS,\n        data: {\n          shoppingListItems: [...cachedList, createdItem]\n        }\n      });\n    }\n  });\n\n  const [updateItem] = useMutation<UpdateItemData, UpdateItemVariables>(UPDATEM_ITEM, {\n    onError: handleApolloError\n  });\n\n  const [deleteItem] = useMutation<DeleteShoppingListItemData, { id: string }>(DELETE_ITEM, {\n    onError: handleApolloError,\n    update: (cache, { data }) => {\n      const deletedItemId = data!.deleteShoppingListItem;\n      const { shoppingListItems: cachedList } = cache.readQuery<ShoppingListItemsData>({ query: GET_ITEMS })!;\n      cache.writeQuery<ShoppingListItemsData>({\n        query: GET_ITEMS,\n        data: {\n          shoppingListItems: cachedList.filter(item => item._id !== deletedItemId)\n        }\n      });\n    }\n  });\n\n  const [clearList] = useMutation<ClearShoppingListData, {}>(CLEAR_LIST, {\n    onError: handleApolloError,\n    update: cache => {\n      cache.writeQuery<ShoppingListItemsData>({\n        query: GET_ITEMS,\n        data: {\n          shoppingListItems: []\n        }\n      });\n    }\n  });\n\n  const createNewItem = async (name: string) => {\n    await createItem({ variables: { name } });\n  };\n\n  const shoppingList = shoppingListData?.shoppingListItems || [];\n\n  const itemsGroupedByAssignee = groupBy(\n    shoppingList,\n    item => item.assignee,\n    item => item\n  );\n\n  const assigneeShoppingLists = Array.from(itemsGroupedByAssignee.entries());\n\n  const handleItemCheckedStateChange = (item: ShoppingListItem, checked: boolean) => {\n    updateItem({\n      variables: {\n        id: item._id,\n        state: checked\n      },\n      optimisticResponse: {\n        updateShoppingListItem: {\n          __typename: \"ShoppingListItem\",\n          _id: item._id,\n          assignee: item.assignee,\n          name: item.name,\n          checked: checked\n        }\n      }\n    });\n  };\n\n  const handleItemDeleted = (item: ShoppingListItem) => {\n    deleteItem({\n      variables: {\n        id: item._id\n      }\n    });\n  };\n\n  const [activeTabKey, setActiveTabKey] = useState(\"main\");\n\n  const getActiveShoppingList = () => {\n    const assigneeList = itemsGroupedByAssignee.get(activeTabKey);\n\n    if (assigneeList) {\n      return assigneeList;\n    }\n\n    return shoppingList;\n  };\n\n  const createSubTitle = () => {\n    const activeList = getActiveShoppingList();\n\n    const itemsToBuy = activeList.filter(item => !item.checked).length;\n\n    const isMainTab = activeTabKey === \"main\";\n\n    if (itemsToBuy === 0) {\n      if (isMainTab) {\n        return \"Wow... ihr habt alles gekauft.\";\n      }\n      return \"Wow... du hast schon alles gekauft.\";\n    }\n\n    if (itemsToBuy === 1) {\n      if (isMainTab) {\n        return \"Nur noch ein Produkt muss gekauft werden. Ihr schafft das!\";\n      }\n      return \"Nur noch ein Produkt muss gekauft werden. Du schaffst das!\";\n    }\n\n    if (isMainTab) {\n      return `Ihr müsst noch ${activeList.filter(item => !item.checked).length} Produkte kaufen.`;\n    }\n\n    return `Du musst noch ${activeList.filter(item => !item.checked).length} Produkte kaufen.`;\n  };\n\n  return (\n    <PageHeader title=\"Einkaufsliste\" subTitle={createSubTitle()}>\n      <Spin spinning={loadingShoppingListItems} tip=\"Wird aktualisiert...\">\n        <Tabs defaultActiveKey=\"main\" activeKey={activeTabKey} onChange={setActiveTabKey}>\n          <TabPane tab=\"Alle\" key=\"main\">\n            <EditableShoppingListComponent\n              shoppingList={shoppingList}\n              onItemAssigneeChange={(item, assignee) => {\n                updateItem({\n                  variables: {\n                    id: item._id,\n                    assignee: assignee\n                  }\n                });\n              }}\n              onItemCheckedChange={handleItemCheckedStateChange}\n              onItemDeleted={handleItemDeleted}\n              onDeleteAllItems={() => clearList()}\n              onCreateNewItem={createNewItem}\n            />\n          </TabPane>\n\n          {assigneeShoppingLists.map(([assignee, assigneeShoppingList]) => {\n            return (\n              <TabPane tab={assignee} key={assignee}>\n                <ShoppingListComponent\n                  shoppingList={assigneeShoppingList}\n                  onItemCheckedChange={handleItemCheckedStateChange}\n                  onItemDeleted={handleItemDeleted}\n                />\n              </TabPane>\n            );\n          })}\n        </Tabs>\n      </Spin>\n    </PageHeader>\n  );\n}\n\nexport default ShoppingListBoard;\n","import { ApolloProvider } from \"@apollo/react-hooks\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport \"./index.css\";\nimport LoginComponent from \"./LoginComponent\";\nimport ShoppingListBoard from \"./ShoppingListBoard\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloLink } from \"apollo-link\";\nimport { onError } from \"apollo-link-error\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { RetryLink } from \"apollo-link-retry\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([\n    new RetryLink({\n      delay: {\n        initial: 300,\n        max: 5000,\n        jitter: true\n      },\n      attempts: {\n        max: Infinity,\n        retryIf: error => !!error\n      }\n    }),\n    onError(({ graphQLErrors, networkError }) => {\n      console.log(graphQLErrors, networkError);\n    }),\n    new HttpLink({ uri: \"/graphql\" })\n  ])\n});\n\nfunction ShoppingListApp() {\n  const [loggedIn, setLoggedIn] = useState(document.cookie.includes(\"SHOPPER_LOGGED_IN=true\"));\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route path=\"/login\">\n        <LoginComponent\n          onLoginSuccess={() => {\n            setLoggedIn(true);\n            history.replace(\"/\");\n          }}\n        />\n      </Route>\n      <Route\n        path=\"/\"\n        render={({ location }) => {\n          if (loggedIn) {\n            return <ShoppingListBoard onAuthenticationError={() => setLoggedIn(false)} />;\n          } else {\n            return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n          }\n        }}\n      ></Route>\n    </Switch>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <ShoppingListApp />\n      </BrowserRouter>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
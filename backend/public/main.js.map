{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./GraphQLDefinitions.ts","webpack:///./LoginComponent.tsx","webpack:///./ShoppingListItemComponent.tsx","webpack:///./utils.ts","webpack:///./ShoppingListComponent.tsx","webpack:///./EditableShoppingListComponent.tsx","webpack:///./ShoppingListBoard.tsx","webpack:///./index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","GET_ITEMS","CREATE_ITEM","DELETE_ITEM","UPDATEM_ITEM","CLEAR_LIST","LOGIN","LoginComponent","props","username","setUserName","password","setPassword","loginError","setLoginError","doLogin","loading","credentialsEmpty","login","variables","justify","align","style","height","labelCol","span","wrapperCol","Item","label","required","validateStatus","hasFeedback","onChange","event","target","onPressEnter","disabled","help","Password","offset","type","onClick","ShoppingListItemComponent","newAssigneeName","setNewAssigneeName","assigneeCandidates","array","set","Set","element","has","add","unique","filter","e","startsWith","selectNewAssignee","onItemAssigneeChange","item","assignee","_id","textDecoration","checked","marginRight","onItemCheckedChange","defaultActiveFirstOption","onSelect","onInputKeyDown","keyCode","onBlur","placeholder","width","options","map","bordered","size","float","border","onItemDeleted","DeleteFilled","alt","dataSource","shoppingList","renderItem","newItemName","setNewItemName","creatingItem","setCreatingItem","createNewItem","onCreateNewItem","offsetBottom","paddingTop","paddingBottom","background","borderTop","display","paddingLeft","title","onConfirm","onDeleteAllItems","okText","cancelText","icon","color","okType","danger","TabPane","activeList","itemsToBuy","isMainTab","setShoppingList","handleApolloError","error","onAuthenticationError","graphQLErrors","find","extensions","code","notification","message","networkError","description","createItem","updateItem","deleteItem","clearList","itemsGroupedByAssignee","keyMapper","valueMapper","Map","valueList","groupBy","assigneeShoppingLists","Array","from","entries","handleItemCheckedStateChange","id","state","handleItemDeleted","activeTabKey","setActiveTabKey","subTitle","spinning","loadingShoppingListItems","tip","defaultActiveKey","activeKey","tab","assigneeShoppingList","client","uri","render","StrictMode","loggedIn","setLoggedIn","history","path","onLoginSuccess","replace","location","to","pathname","document","getElementById"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([422,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { gql } from \"apollo-boost\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\n\ninterface GraphQlResponse<T> {\n  success: boolean;\n  message: string;\n  data?: T;\n}\n\nexport const GET_ITEMS = gql`\n  {\n    shoppingListItems {\n      _id\n      name\n      checked\n      assignee\n    }\n  }\n`;\n\nexport interface ShoppingListItemsData {\n  shoppingListItems: ShoppingListItem[];\n}\n\nexport const CREATE_ITEM = gql`\n  mutation createShoppingListItem($name: String!) {\n    createShoppingListItem(name: $name) {\n      _id\n      name\n      checked\n      assignee\n    }\n  }\n`;\n\nexport interface CreateShoppingListItemData {\n  createShoppingListItem: ShoppingListItem;\n}\n\nexport const DELETE_ITEM = gql`\n  mutation deleteItem($id: ID!) {\n    deleteShoppingListItem(id: $id)\n  }\n`;\n\nexport interface DeleteShoppingListItemData {\n  deleteShoppingListItem: string;\n}\n\nexport const UPDATEM_ITEM = gql`\n  mutation updateItem($id: ID!, $state: Boolean, $assignee: String) {\n    updateShoppingListItem(id: $id, state: $state, assignee: $assignee) {\n      _id\n      name\n      checked\n      assignee\n    }\n  }\n`;\n\nexport interface UpdateItemData {\n  updateShoppingListItem: ShoppingListItem;\n}\n\nexport interface UpdateItemVariables {\n  id: string;\n  state?: boolean;\n  assignee?: string;\n}\n\nexport const CLEAR_LIST = gql`\n  mutation clearList {\n    clearShoppingList\n  }\n`;\n\nexport interface ClearShoppingListData {\n  clearShoppingList: boolean;\n}\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      success\n      message\n    }\n  }\n`;\n\nexport interface LoginData {\n  login: GraphQlResponse<void>;\n}\n\nexport interface LoginVariables {\n  username: string;\n  password: string;\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Button, Row, Col } from \"antd\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LoginData, LoginVariables, LOGIN } from \"./GraphQLDefinitions\";\n\nexport interface LoginComponentProps {\n  onLoginSuccess: () => void;\n}\n\nexport default function LoginComponent(props: LoginComponentProps) {\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n\n  const [doLogin, { loading }] = useMutation<LoginData, LoginVariables>(LOGIN, {\n    onCompleted: data => {\n      if (data.login.success) {\n        setLoginError(\"\");\n        props.onLoginSuccess();\n      } else {\n        setLoginError(data.login.message);\n      }\n    }\n  });\n\n  const credentialsEmpty = username === \"\" || password === \"\";\n\n  const login = () => {\n    if (credentialsEmpty) {\n      return;\n    }\n    doLogin({ variables: { username, password } });\n  };\n\n  return (\n    <Row justify={\"center\"} align={\"middle\"} style={{ height: \"100%\" }}>\n      <Col>\n        <Form labelCol={{ span: 8 }} wrapperCol={{ span: 16 }}>\n          <Form.Item label={\"Nutzername:\"} required={true} validateStatus={loginError ? \"error\" : \"\"} hasFeedback>\n            <Input\n              onChange={event => setUserName(event.target.value)}\n              value={username}\n              onPressEnter={login}\n              disabled={loading}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\"Kennwort:\"}\n            required={true}\n            help={loginError}\n            validateStatus={loginError ? \"error\" : \"\"}\n            hasFeedback\n          >\n            <Input.Password\n              onChange={event => setPassword(event.target.value)}\n              value={password}\n              onPressEnter={login}\n              disabled={loading}\n            />\n          </Form.Item>\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" onClick={login} disabled={credentialsEmpty || loading} loading={loading}>\n              Anmelden\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n","import { DeleteFilled } from \"@ant-design/icons\";\nimport { AutoComplete, Button, Checkbox, List } from \"antd\";\nimport React, { useState } from \"react\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\nimport { unique } from \"./utils\";\n\nexport interface ShoppingListItemComponentProps {\n  item: ShoppingListItem;\n  assigneeCandidates?: string[];\n  onItemCheckedChange: (checked: boolean) => void;\n  onItemDeleted: () => void;\n  onItemAssigneeChange?: (assignee: string) => void;\n}\n\nexport function ShoppingListItemComponent(props: ShoppingListItemComponentProps) {\n  const [newAssigneeName, setNewAssigneeName] = useState(props.item.assignee);\n\n  const assigneeCandidates = props.assigneeCandidates\n    ? unique(props.assigneeCandidates.filter(e => e.startsWith(newAssigneeName) && e !== \"\"))\n    : [];\n\n  const selectNewAssignee = () => {\n    if (props.onItemAssigneeChange && newAssigneeName !== props.item.assignee) {\n      props.onItemAssigneeChange(newAssigneeName);\n    }\n  };\n\n  return (\n    <List.Item\n      key={props.item._id}\n      style={{\n        textDecoration: props.item.checked ? \"line-through\" : \"none\"\n      }}\n    >\n      <Checkbox\n        style={{ marginRight: \"1em\" }}\n        checked={props.item.checked}\n        onChange={event => props.onItemCheckedChange(event.target.checked)}\n      />\n      {props.item.name}\n\n      {props.assigneeCandidates && props.item.assignee ? \" kauft\" : \"\"}\n      {props.assigneeCandidates && (\n        <AutoComplete\n          defaultActiveFirstOption={true}\n          value={newAssigneeName}\n          onChange={setNewAssigneeName}\n          onSelect={selectNewAssignee}\n          onInputKeyDown={event => {\n            if (event.keyCode === 13) {\n              selectNewAssignee();\n            }\n          }}\n          onBlur={selectNewAssignee}\n          placeholder={\"Wer kauf das?\"}\n          style={{ width: 200 }}\n          options={assigneeCandidates.map(value => {\n            return { value };\n          })}\n          bordered={false}\n          size={\"small\"}\n        ></AutoComplete>\n      )}\n      <Button style={{ float: \"right\", border: \"0px\" }} onClick={props.onItemDeleted} data-testid=\"delete-item-btn\">\n        <DeleteFilled alt={\"Eintrag entfernen\"} />\n      </Button>\n    </List.Item>\n  );\n}\n","export function unique<T>(array: T[]): T[] {\n  const set = new Set<T>();\n  const result: T[] = [];\n\n  for (const element of array) {\n    if (!set.has(element)) {\n      result.push(element);\n      set.add(element);\n    }\n  }\n\n  return result;\n}\n\nexport function groupBy<K, V, T>(array: T[], keyMapper: (item: T) => K, valueMapper: (item: T) => V): Map<K, V[]> {\n  const map = new Map<K, V[]>();\n\n  for (const item of array) {\n    const key = keyMapper(item);\n    const value = valueMapper(item);\n\n    const valueList = map.get(key);\n\n    if (valueList) {\n      valueList.push(value);\n    } else {\n      map.set(key, [value]);\n    }\n  }\n\n  return map;\n}\n","import { List } from \"antd\";\nimport React from \"react\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\nimport { ShoppingListItemComponent } from \"./ShoppingListItemComponent\";\n\nexport interface ShoppingListComponentProps {\n  assigneeCandidates?: string[];\n  shoppingList: ShoppingListItem[];\n  onItemCheckedChange: (item: ShoppingListItem, checked: boolean) => void;\n  onItemDeleted: (item: ShoppingListItem) => void;\n  onItemAssigneeChange?: (item: ShoppingListItem, assignee: string) => void;\n}\n\nfunction ShoppingListComponent(props: ShoppingListComponentProps) {\n  return (\n    <List\n      dataSource={props.shoppingList}\n      renderItem={item => {\n        return (\n          <ShoppingListItemComponent\n            item={item}\n            assigneeCandidates={props.assigneeCandidates}\n            onItemCheckedChange={checked => props.onItemCheckedChange(item, checked)}\n            onItemDeleted={() => props.onItemDeleted(item)}\n            onItemAssigneeChange={assignee => {\n              if (props.onItemAssigneeChange) {\n                props.onItemAssigneeChange(item, assignee);\n              }\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nexport default ShoppingListComponent;\n","import { DeleteFilled } from \"@ant-design/icons\";\nimport { Affix, Button, Input, Popconfirm } from \"antd\";\nimport React, { useState } from \"react\";\nimport ShoppingListComponent from \"./ShoppingListComponent\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\n\nexport interface EditableShoppingListComponentProps {\n  shoppingList: ShoppingListItem[];\n  onItemCheckedChange: (item: ShoppingListItem, checked: boolean) => void;\n  onItemDeleted: (item: ShoppingListItem) => void;\n  onItemAssigneeChange: (item: ShoppingListItem, assignee: string) => void;\n  onCreateNewItem: (name: string) => Promise<void>;\n  onDeleteAllItems: () => void;\n}\n\nfunction EditableShoppingListComponent(props: EditableShoppingListComponentProps) {\n  const [newItemName, setNewItemName] = useState<string>(\"\");\n  const [creatingItem, setCreatingItem] = useState<boolean>(false);\n\n  const assigneeCandidates: string[] = props.shoppingList.map(item => item.assignee);\n\n  const createNewItem = async () => {\n    if (newItemName === \"\") {\n      return;\n    }\n\n    setCreatingItem(true);\n    await props.onCreateNewItem(newItemName);\n    setNewItemName(\"\");\n    setCreatingItem(false);\n  };\n\n  return (\n    <div>\n      <ShoppingListComponent\n        shoppingList={props.shoppingList}\n        assigneeCandidates={assigneeCandidates}\n        onItemAssigneeChange={props.onItemAssigneeChange}\n        onItemCheckedChange={props.onItemCheckedChange}\n        onItemDeleted={props.onItemDeleted}\n      />\n      <Affix offsetBottom={0}>\n        <div style={{ paddingTop: \"10px\", paddingBottom: \"10px\", background: \"white\", borderTop: \"1px solid #f0f0f0\" }}>\n          <div style={{ display: \"inline-block\", width: \"70%\" }}>\n            <Input\n              value={newItemName}\n              onChange={event => setNewItemName(event.target.value)}\n              onPressEnter={createNewItem}\n              disabled={creatingItem}\n            />\n          </div>\n          <div style={{ display: \"inline-block\", width: \"20%\", paddingLeft: \"10px\" }}>\n            <Button\n              type=\"primary\"\n              style={{ width: \"100%\" }}\n              disabled={newItemName === \"\"}\n              onClick={createNewItem}\n              loading={creatingItem}\n            >\n              Hinzufügen\n            </Button>\n          </div>\n          <div style={{ display: \"inline-block\", width: \"10%\", paddingLeft: \"10px\" }}>\n            <Popconfirm\n              title=\"Wollen Sie die Einkaufsliste wirklich leeren?\"\n              onConfirm={props.onDeleteAllItems}\n              okText=\"Ja\"\n              cancelText=\"Nein\"\n              icon={<DeleteFilled style={{ color: \"#555555\" }} />}\n              okType=\"danger\"\n            >\n              <Button style={{ width: \"100%\" }} danger type=\"primary\">\n                Liste leeren\n              </Button>\n            </Popconfirm>\n          </div>\n        </div>\n      </Affix>\n    </div>\n  );\n}\n\nexport default EditableShoppingListComponent;\n","import { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { notification, PageHeader, Spin, Tabs } from \"antd\";\nimport { ApolloError } from \"apollo-boost\";\nimport produce from \"immer\";\nimport React, { useState } from \"react\";\nimport EditableShoppingListComponent from \"./EditableShoppingListComponent\";\nimport {\n  ClearShoppingListData,\n  CLEAR_LIST,\n  CreateShoppingListItemData,\n  CREATE_ITEM,\n  DeleteShoppingListItemData,\n  DELETE_ITEM,\n  GET_ITEMS,\n  ShoppingListItemsData,\n  UpdateItemData,\n  UpdateItemVariables,\n  UPDATEM_ITEM\n} from \"./GraphQLDefinitions\";\nimport ShoppingListComponent from \"./ShoppingListComponent\";\nimport { ShoppingListItem } from \"./ShoppingListItem\";\nimport { groupBy } from \"./utils\";\n\nconst { TabPane } = Tabs;\n\nexport interface ShoppingListBoardProps {\n  onAuthenticationError?: () => void;\n}\n\nfunction ShoppingListBoard(props: ShoppingListBoardProps) {\n  const [shoppingList, setShoppingList] = useState<ShoppingListItem[]>([]);\n\n  const handleApolloError = (error: ApolloError) => {\n    if (props.onAuthenticationError && error.graphQLErrors.find(e => e?.extensions?.code === 401)) {\n      props.onAuthenticationError();\n    } else {\n      notification.error({\n        message: error.networkError ? \"Uuups ein Fehler ist aufgetreten...\" : error.name,\n        description: error.networkError ? \"Der Server antwortet nicht :(\" : error.message\n      });\n    }\n  };\n\n  const { loading: loadingShoppingListItems } = useQuery<ShoppingListItemsData>(GET_ITEMS, {\n    onError: handleApolloError,\n    onCompleted: data => setShoppingList(data.shoppingListItems),\n    fetchPolicy: \"network-only\"\n  });\n\n  const [createItem] = useMutation<CreateShoppingListItemData, { name: string }>(CREATE_ITEM, {\n    onError: handleApolloError,\n    onCompleted: data =>\n      setShoppingList(produce((draft: ShoppingListItem[]) => draft.concat(data.createShoppingListItem)))\n  });\n\n  const [updateItem] = useMutation<UpdateItemData, UpdateItemVariables>(UPDATEM_ITEM, {\n    onError: handleApolloError,\n    onCompleted: data =>\n      setShoppingList(\n        produce((draft: ShoppingListItem[]) =>\n          draft.map(item => {\n            if (item._id === data.updateShoppingListItem._id) {\n              return data.updateShoppingListItem;\n            }\n            return item;\n          })\n        )\n      )\n  });\n\n  const [deleteItem] = useMutation<DeleteShoppingListItemData, { id: string }>(DELETE_ITEM, {\n    onError: handleApolloError,\n    onCompleted: data =>\n      setShoppingList(\n        produce((draft: ShoppingListItem[]) => draft.filter(item => item._id !== data.deleteShoppingListItem))\n      )\n  });\n\n  const [clearList] = useMutation<ClearShoppingListData, {}>(CLEAR_LIST, {\n    onError: handleApolloError,\n    onCompleted: () => setShoppingList([])\n  });\n\n  const createNewItem = async (name: string) => {\n    await createItem({ variables: { name } });\n  };\n\n  const itemsGroupedByAssignee = groupBy(\n    shoppingList,\n    item => item.assignee,\n    item => item\n  );\n\n  const assigneeShoppingLists = Array.from(itemsGroupedByAssignee.entries());\n\n  const handleItemCheckedStateChange = (item: ShoppingListItem, checked: boolean) => {\n    updateItem({\n      variables: {\n        id: item._id,\n        state: checked\n      }\n    });\n  };\n\n  const handleItemDeleted = (item: ShoppingListItem) => {\n    deleteItem({\n      variables: {\n        id: item._id\n      }\n    });\n  };\n\n  const [activeTabKey, setActiveTabKey] = useState(\"main\");\n\n  const getActiveShoppingList = () => {\n    const assigneeList = itemsGroupedByAssignee.get(activeTabKey);\n\n    if (assigneeList) {\n      return assigneeList;\n    }\n\n    return shoppingList;\n  };\n\n  const createSubTitle = () => {\n    const activeList = getActiveShoppingList();\n\n    const itemsToBuy = activeList.filter(item => !item.checked).length;\n\n    const isMainTab = activeTabKey === \"main\";\n\n    if (itemsToBuy === 0) {\n      if (isMainTab) {\n        return \"Wow... ihr habt alles gekauft.\";\n      }\n      return \"Wow... du hast schon alles gekauft.\";\n    }\n\n    if (itemsToBuy === 1) {\n      if (isMainTab) {\n        return \"Nur noch ein Produkt muss gekauft werden. Ihr schafft das!\";\n      }\n      return \"Nur noch ein Produkt muss gekauft werden. Du schaffst das!\";\n    }\n\n    if (isMainTab) {\n      return `Ihr müsst noch ${activeList.filter(item => !item.checked).length} Produkte kaufen.`;\n    }\n\n    return `Du musst noch ${activeList.filter(item => !item.checked).length} Produkte kaufen.`;\n  };\n\n  return (\n    <PageHeader title=\"Einkaufsliste\" subTitle={createSubTitle()}>\n      <Spin spinning={loadingShoppingListItems} tip=\"Wird aktualisiert...\">\n        <Tabs defaultActiveKey=\"main\" activeKey={activeTabKey} onChange={setActiveTabKey}>\n          <TabPane tab=\"Gesamte Einkaufsliste\" key=\"main\">\n            <EditableShoppingListComponent\n              shoppingList={shoppingList}\n              onItemAssigneeChange={(item, assignee) => {\n                updateItem({\n                  variables: {\n                    id: item._id,\n                    assignee: assignee\n                  }\n                });\n              }}\n              onItemCheckedChange={handleItemCheckedStateChange}\n              onItemDeleted={handleItemDeleted}\n              onDeleteAllItems={() => clearList()}\n              onCreateNewItem={createNewItem}\n            />\n          </TabPane>\n\n          {assigneeShoppingLists.map(([assignee, assigneeShoppingList]) => {\n            return (\n              <TabPane tab={assignee} key={assignee}>\n                <ShoppingListComponent\n                  shoppingList={assigneeShoppingList}\n                  onItemCheckedChange={handleItemCheckedStateChange}\n                  onItemDeleted={handleItemDeleted}\n                />\n              </TabPane>\n            );\n          })}\n        </Tabs>\n      </Spin>\n    </PageHeader>\n  );\n}\n\nexport default ShoppingListBoard;\n","import { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport \"./index.css\";\nimport LoginComponent from \"./LoginComponent\";\nimport ShoppingListBoard from \"./ShoppingListBoard\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\"\n});\n\nfunction ShoppingListApp() {\n  const [loggedIn, setLoggedIn] = useState(document.cookie.includes(\"SHOPPER_LOGGED_IN=true\"));\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route path=\"/login\">\n        <LoginComponent\n          onLoginSuccess={() => {\n            setLoggedIn(true);\n            history.replace(\"/\");\n          }}\n        />\n      </Route>\n      <Route\n        path=\"/\"\n        render={({ location }) => {\n          if (loggedIn) {\n            return <ShoppingListBoard onAuthenticationError={() => setLoggedIn(false)} />;\n          } else {\n            return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n          }\n        }}\n      ></Route>\n    </Switch>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <ShoppingListApp />\n      </BrowserRouter>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}